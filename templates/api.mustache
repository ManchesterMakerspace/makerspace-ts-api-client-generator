/* tslint:disable */

{{#models}}
{{#model}}
{{#description}}
/**
 * {{{description}}}
 */
{{/description}}
{{^isEnum}}
export interface {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
{{/isEnum}}
{{#isEnum}}
export type {{{classname}}} = {{#allowableValues}}{{#values}}"{{{.}}}"{{^-last}} | {{/-last}}{{/values}}{{/allowableValues}};
export enum {{{classname}}}Values {
    {{#allowableValues}}{{#values}}{{.}} = "{{{.}}}"{{^-last}},
    {{/-last}}{{/values}}{{/allowableValues}}
}
{{/isEnum}}
{{#vars}}
{{#description}}
    /**
     * {{{description}}}
     */
{{/description}}
    "{{name}}"{{^required}}?{{/required}}: {{#isEnum}}{{classname}}{{{enumName}}}{{/isEnum}}{{^isEnum}}{{{datatype}}}{{/isEnum}};
{{/vars}}
{{^isEnum}}
}

{{/isEnum}}{{#hasEnums}}
{{#vars}}
    {{#isEnum}}
export enum {{classname}}{{enumName}} {
{{#allowableValues}}
    {{#enumVars}}
    {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
    {{/enumVars}}
{{/allowableValues}}
}

{{/isEnum}}
{{/vars}}
{{/hasEnums}}
{{/model}}
{{/models}}

{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#operation}}
export type {{nickname}}ReturnType = {{#returnType}}{{{returnType}}}[keyof {{{returnType}}}]{{/returnType}}{{^returnType}}Response{{/returnType}};
{{/operation}}

{{#operation}}
/** {{#summary}}
* {{summary}}{{/summary}}{{#notes}}
* {{notes}}{{/notes}}{{#allParams}}
* @param {{paramName}} {{description}}{{/allParams}}
*/
export function {{nickname}}({{#hasParams}}params: { {{#allParams}} "{{paramName}}"{{^required}}?{{/required}}: {{{dataType}}};{{/allParams}} }{{/hasParams}}): Promise<{ response: Response, data: {{#returnType}}{{nickname}}ReturnType{{/returnType}}{{^returnType}}undefined{{/returnType}} }> {
    const path = `{{{path}}}`{{#pathParams}}.replace(`{${"{{baseName}}"}}`, `${ params["{{paramName}}"] }`){{/pathParams}};

    return makeRequest{{#returnType}}{{^isResponseBinary}}<{{nickname}}ReturnType>{{/isResponseBinary}}{{/returnType}}(
        "{{httpMethod}}",
        path,
{{#hasQueryParams}}
        {
            {{#queryParams}}
            "{{baseName}}": { values: params["{{paramName}}"]{{#collectionFormat}}, collectionFormat: "{{collectionFormat}}"{{/collectionFormat}} }{{^-last}},{{/-last}}
            {{/queryParams}}
        },
{{/hasQueryParams}}
{{#hasHeaderParams}}
        {
            {{#headerParams}}
            "{{baseName}}":  params["{{paramName}}"]{{^-last}},{{/-last}}
            {{/headerParams}}
        },
        {{/hasHeaderParams}}
{{#hasFormParams}}
        {
            {{#formParams}}
            "{{baseName}}": params["{{paramName}}"]{{^-last}},{{/-last}}
            {{/formParams}}
        }
        {{/hasFormParams}}
{{^hasFormParams}}
{{#hasBodyParam}}
{{#bodyParam}}
        params["{{paramName}}"]
        {{/bodyParam}}
    {{/hasBodyParam}}
{{/hasFormParams}}
    );
}
{{/operation}}
{{/operations}}
{{/apis}}
{{/apiInfo}}
